name: "nginxproxy"
type: golang:1.14

relationships:
    app: "app:http"

hooks:
    deploy: |
      # Configure the listener port appropriately.
      mkdir -p /tmp/appnginx/
      if [ "wp-fastest-cache" != "${CACHEPLUGIN}" ]; then
        export CACHEDIR=$(/bin/bash plugins.sh "${CACHEPLUGIN}")
        envsubst '${CACHEDIR}' < /app/cache-conf/default.conf > /app/conf/default.conf
        export CONFFILE="default"
      else
        export CONFFILE=${CACHEPLUGIN}
        rsync -a "cache-conf/${CACHEPLUGIN}.conf conf
      fi
      #export PLUGIN=$(/bin/bash plugins.sh "${CACHEPLUGIN}")
      rsync -a cache-conf/ conf
      envsubst '${PORT} ${CONFFILE}' < /app/nginx.conf > /app/conf/nginx.conf

mounts:
  "/conf": "shared:files/conf"
  "/log": "shared:files/log"
  "www/wp-content/cache":
      source: service
      service: sharedcache
      source_path: "cache"

web:
    upstream:
        socket_family: tcp
        protocol: http

    commands:
        start: /usr/sbin/nginx -p /app/conf -c /app/conf/nginx.conf -g 'error_log /app/log/error.log;daemon off;' > /app/log/error.log 2>&1 ; sleep 1

    locations:
        /:
            # Route all requests unconditionally.
            # If you want some files served directly by the web server without hitting Go, see
            # https://docs.platform.sh/configuration/app/web.html
            allow: false
            passthru: true

disk: 512

variables:
  env:
    CACHEPLUGIN: 'comet-cache'
source:
  operations:
    test:
      command: |
        echo "hello from source op"
