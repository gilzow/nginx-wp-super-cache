# 172
name: "app"

type: php:7.4
build:
  flavor: composer

dependencies:
  php:
    composer/composer: '^2'
    wp-cli/wp-cli-bundle: "^2.4.0"

web:
  locations:
    "/":
      # The public directory of the app, relative to its root.
      root: "wordpress"
      # The front-controller script to send non-static requests to.
      passthru: "/index.php"
      # Wordpress has multiple roots (wp-admin) so the following is required
      index:
        - "index.php"
      # The number of seconds whitelisted (static) content should be cached.
      expires: 600
      scripts: true
      allow: true
      rules:
        ^/composer\.json:
          allow: false
        ^/license\.txt$:
          allow: false
        ^/readme\.html$:
          allow: false
    "/wp-content":
      allow: false
      scripts: false
      rules:
        # Allow access to common static files.
        '(?<!\-lock)\.(?i:jpe?g|gif|png|svg|bmp|ico|css|js(?:on)?|eot|ttf|woff|woff2|pdf|docx?|xlsx?|pp[st]x?|psd|odt|key|mp[2-5g]|m4[av]|og[gv]|wav|mov|wm[av]|avi|3g[p2])$':
          allow: true
          expires: 1w
    "/wp-content/cache":
      root: "wordpress/wp-content/cache"
      scripts: false
      allow: false
      rules:
        '\.html$':
          allow: true

mounts:
  "wordpress/wp-content/cache":
    source: service
    service: sharedcache
    source_path: "cache"
  "wordpress/wp-content/cache-config":
    source: local
    source_path: "cache-config"
  "wordpress/wp-content/uploads":
    source: local
    source_path: "uploads"

hooks:
  build: |
    set -e
    # Copy manually-provided plugins into the plugins directory.
    # This allows manually-provided and composer-provided plugins to coexist.
    rsync -a plugins/* wordpress/wp-content/plugins/
    # if the cache plugin var is set, then it means we're most likely going to need the advanced-cache.php file
    if [ -n "${CACHEPLUGIN}" ]; then
      # we can't copy the file until the deploy stage because the writable mount isn't available but we can force
      # create a symlink to what *will* be the location later
      ln -sf /app/wordpress/wp-content/cache-config/advanced-cache.php wordpress/wp-content/advanced-cache.php
    fi

  deploy: |
    #If our advanced-cache.php file doesn't exist yet, create it so our symlink doesnt cause an error
    if [ ! -f wordpress/wp-content/cache-config/advanced-cache.php ] && [ -n "${CACHEPLUGIN}" ]; then
        touch wordpress/wp-content/cache-config/advanced-cache.php
    fi

    wp core is-installed && wp core update-db && wp cache flush && wp cron event run --due-now


relationships:
    database: "mysqldb:mysql"

disk: 1000
